}
if ((length(ind_u) == 0)&(length(t) == 2)){
#### pattern search
ind_u = icd_codes_split[2,which(str_detect(icd_codes_split[1,], t[1]))][1]
}
if (length(ind_u) != 0){
input$Diagnostic[ind]= ind_u
}
}
input$DiagnosticCategory= sapply(input$PrimaryDiagnosis, FUN=function(x){
gsub( "\\..*$", "", x )
})
input$DiagnosticCategoryName = "NA"
icd10_categories = read.csv("~/Downloads/ICD10categories.csv", header = FALSE)
icd10_categories$V1 <- sapply(icd10_categories$V1, toString)
icd10_categories$V2 <- sapply(icd10_categories$V2, toString)
for (u in unique(input$DiagnosticCategory)){
if (u!=""){
index = which(icd10_categories[,1] == u)
if (length(index) == 0){
index = which(icd10_categories[,1] == paste0(u, "0"))
}
input$DiagnosticCategoryName[which(input$DiagnosticCategory == u)]=icd10_categories[index,2]
}
}
com = comorbidity(
diagnoses,
id="RunID",
code="ICD10Code",
score="charlson",
assign0=FALSE,
icd = "icd10",
factorise = FALSE,
labelled = TRUE,
tidy.codes = TRUE
)
input$Charlson = unlist(sapply(input$RunID, function(x){as.numeric(com$wscore[which(com$RunID == toString(x))[1]])}))
resp_score_func<- function(y){
x = y
x[which(is.na(y))] = 0
if (x["AgeYears"] < 18){
return(NA)
}
score = 0 + ifelse(x["AgeYears"] >= 50, -2,0) + ifelse(x["AgeYears"] >= 60, -1,0)
score = score + ifelse(is.na(x["IntubationToTimeOnHours"]), 0,3) + ifelse(x["IntubationToTimeOnHours"] >= 48, -2,0) + ifelse(x["IntubationToTimeOnHours"]  >= 24 * 7, -1,0)
score = score + ifelse(x["PCO2"] >= 75, -1,0)
score = score + ifelse(x["PIP"] >= 42, -1,0)
score = score + ifelse(x["PreECLSArrest"] == "Yes", -2,0)
### diagnosis stuff
index =   which(diagnoses$RunID == toString(x["RunID"]))
index_cpt =  which(proc$RunID == toString(x["RunID"]))
asthma_list= c("J45.22", "J45.32", "J45.42", "J45.52", "J45.90")
score =score + ifelse(sum(diagnoses$ICD10Code[index] %in% asthma_list)>0, 11,0)
viral_pneumonia_list= c("B01.2", "B05.2", "J12.0", "J12.1",  "J12.2", "J12.3", "J12.81", "J12.89", "J12.9", "B25.0", "J09.X1", "J10.00", "J10.01", "J10.08", "B97.81","B97.4")
aspiration_pneumonia_list=c("J69.0","J69.1","J69.8")
score =score + ifelse(sum(diagnoses$ICD10Code[index] %in% viral_pneumonia_list)>0, 3,0)
score =score + ifelse(sum(diagnoses$ICD10Code[index] %in% aspiration_pneumonia_list)>0, 5,0)
non_pulm_infection_list = c("B00.7","A40","A41.9","A01","A01.02","A01.04","A01.4","A04.0","A04.4","A24.1","A31.1","A31.9","A36.0","A36.2","A39","A39.2","A39.4","A39.9","A42.9","A48.0","A48.3","A48.4","A48.8","B95.0","B95.8","A87","A87.9","B00.3","B00.7","B00.81","B00.89","B00.9","B25.9","B37.6","B37.7","B97.0","B97.29","B97.89","A77.0","A77.2","B50.0","B54","B37.7","D59.3","G00.0","G00.9","I26.90","I33.0","I39","J85.3","K65.0","K65.3","K75.0","N39.0","O75.3","O85","M72.6","R65.20","R65.21","R78.8")
score =score + ifelse(sum(diagnoses$ICD10Code[index] %in% non_pulm_infection_list)>0, -3,0)
### Comorbidity stuff
cancer_list = c("C00", "D49.9")
immuno_compr_cancer_list = c("B20", "T86.00", "T86.09", "Z94.81","T86.10", "T86.19 Z94.0",
"T86.20", "T86.39", "Z94.1", "T86.40", "T86.49", "Z94.4",
"T86.810", "T86.819","Z94.2", "T86.850", "T86.859", "Z94.82", "Z94.83",
"K70.30", "K70.31", "K74.0","K74.2", "K74.3", "K74.4", "K74.5", "K74.60", "K74.69")
immuno_compr_cancer_cpt_list = c(38240, 38241)
liver_failure_list = c("K72.00", "K72.01", "K72.90", "K72.91", "K76.2", "K76.3")
score =score + ifelse(sum(diagnoses$ICD10Code[index] %in% c(cancer_list,immuno_compr_cancer_list,liver_failure_list)) + sum(proc$CPTCode[index_cpt] %in% immuno_compr_cancer_cpt_list)>0, -2,0)
return(score)
}
input$resp_score = apply(input,1, resp_score_func)
save_score <- function(y){
x = y
x[which(is.na(x))] = 0
if (x["AgeYears"] < 18){
return(NA)
}
score = 0 + ifelse(x["AgeYears"] <= 63, 3,0)  + ifelse(x["AgeYears"] <= 52, 1,0)  + ifelse(x["AgeYears"] <= 38, 3,0)
score = score + ifelse(x["IntubationToTimeOnHours"] >=11, -2,0) + ifelse(x["IntubationToTimeOnHours"]   >= 30, -2,0)
score = score + ifelse(x["PIP"] <=20, 3,0)
score = score + ifelse(x["DBP"] >= 40, 3,0)
score = score + ifelse(x["PP"] <= 30, -2,0)
score = score + ifelse(x["PreECLSArrest"] == "Yes", -2,0)
score = score + ifelse(x["HCO3"] <=15, -3,0)
### diagnosis stuff
index=  which(diagnoses$RunID == toString(x["RunID"]))
index_cpt=  which(proc$RunID == toString(x["RunID"]))
myocarditis_list= c("A39.52", "B33.22"," B58.81", "I01.2","I09.0", "I40.0", "I40.9", "I41", "I51.4")
score =score + ifelse(sum(diagnoses$ICD10Code[index] %in% myocarditis_list)>0,3,0)
congenital_hrt_disease_list =c("745","747.9")
score =score + ifelse(sum(diagnoses$ICD10Code[index] %in% congenital_hrt_disease_list)>0,-3,0)
hrt_lung_transplant_list = c("996.83", "V42.1", "996.84","V42.6")
hrt_lung_transplant_cpt_list = c(33945,33935,32851, 32852, 32853, 32854)
score =score + ifelse(sum(diagnoses$ICD10Code[index] %in% hrt_lung_transplant_list)>0, 3,0)
score =score + ifelse(sum(proc$CPTCode[index_cpt] %in% hrt_lung_transplant_cpt_list)>0, 3,0)
acute_organ_failures = c("N17", "N17.0", "N17.1", "N17.2", "N17.8","N17.9","N19",
"K72.00", "K72.01", "K72.90", "K72.91", "K76.2","K76.3")
score =score + ifelse(sum(diagnoses$ICD10Code[index] %in% acute_organ_failures)>0, -3,0)
chronic_renal_failure = c("N18.5", "N18.6", "I12.0", "I13.11", "I13.2")
score =score + ifelse(sum(diagnoses$ICD10Code[index] %in% chronic_renal_failure)>0, -6,0)
pre_ecmo_cardiac_arrest = c("I46.9")
### no idea how to check for complications: I suppose since proc has been filtered for preECLS, that would get rid of these complications
score =score + ifelse(sum(diagnoses$ICD10Code[index] %in% pre_ecmo_cardiac_arrest)>0, -2,0)
return(score)
}
input$save_score = apply(input,1, save_score)
summary_table1 = input %>%
select(AgeYears, Sex_num, SupportType, ICUtype)%>%
group_by(ICUtype, SupportType) %>%
summarise_if(is.numeric,funs(MEAN=mean,
Q1=quantile(x = ., probs = 0.25),
MEDIAN=quantile(x = ., probs = 0.5),
Q3=quantile(x = ., probs = 0.75),
), na.rm=TRUE)
write_csv(summary_table1, paste0(FOLDER_OUTPUT, "table1.csv"))
run_id_cardiac_surgery = proc$RunID[which(proc$CPTCode %in% c(33016,33999))]
input$`Cardiac Surgery` = sapply(input$RunID, function(x){
ifelse(toString(x) %in% run_id_cardiac_surgery, "Post-Cardiac Surgery", "non Post-Cardiac Surgery")
})
ggplot(input %>%
filter(ICUtype == "CT-ICU"))+
geom_bar(aes(x=YearECLS, fill=`Cardiac Surgery`), position="dodge")+
scale_y_log10()+
theme_bw()
ggsave(paste0(FOLDER_PLOTS, "figure1.pdf"))
ggplot(input)+
geom_bar(aes(x=YearECLS, fill=ICUtype), position="dodge")+
theme_bw()
ggsave(paste0(FOLDER_PLOTS, "figure2.pdf"))
ggplot(input)+
geom_bar(aes(x=YearECLS, fill=ICULocation), position="dodge")+
scale_y_log10()+
scale_fill_brewer(palette = "Set2")+
theme_bw()
ggsave(paste0(FOLDER_PLOTS, "figure2_bis.pdf"))
ggplot(input %>% filter(ICUtype == "CT-ICU"))+
geom_bar(aes(x=YearECLS, fill=SupportType))+
scale_fill_brewer(palette="Set2") +
theme_bw()
ggsave(paste0(FOLDER_PLOTS, "figure3.pdf"))
ggplot(input %>% filter(ICUtype == "Non CT-ICU"))+
geom_bar(aes(x=YearECLS, fill=SupportType))+
theme_bw() +
scale_fill_brewer(palette="Set2")
ggsave(paste0(FOLDER_PLOTS, "figure4.pdf"))
input_cardiac = input %>%
filter(SupportType == "Cardiac")
### Compute characteristics
summary_table2_cardiac = input_cardiac %>%
select(AgeYears, Sex_num, ICUtype,YearECLS, resp_score, save_score, PO224, PumpFlow24, DBP24,TimeOnToEntralFeeding)%>%
group_by(ICUtype, YearECLS) %>%
summarise_if(is.numeric,funs(MEAN=mean,
Q1=quantile(x = ., probs = 0.25),
MEDIAN=quantile(x = ., probs = 0.5),
Q3=quantile(x = ., probs = 0.75),
), na.rm=TRUE)
write_csv(summary_table2_cardiac, paste0(FOLDER_OUTPUT, "table2_cardiac.csv"))
OUTPUT_VARS = c("PO224", "PCO224", "Fio224","PEEP24", "SBP24",
"MeanAP24",  "TimeOnToEntralFeeding", "PumpFlow4",
"PumpFlow24", "Rate24")
INPUT_VARS = c("AgeYears", "Sex", "PO2", "PEEP", "HCO3", "save_score", "Charlson", "PreECLSArrest",
"Transplant", "IntubationToTimeOnHours", "ICUtype")
coeffs = matrix(0, length(OUTPUT_VARS), length(INPUT_VARS) + 1)
sig_coeffs = matrix(0, length(OUTPUT_VARS), length(INPUT_VARS) + 1)
input_cardiac$PreECLSArrest = factor(input_cardiac$PreECLSArrest)
for (i in 1:length(OUTPUT_VARS)){
input_cardiac$Y = input_cardiac[, OUTPUT_VARS[i]]
mod <- lm(Y~ ., data= input_cardiac[, c("Y", INPUT_VARS)])
summary(mod)
coeffs[i,] =  summary(mod)$coefficients[,1]
sig_coeffs[i,] =  summary(mod)$coefficients[,4]
}
coeffs = data.frame(coeffs, row.names = OUTPUT_VARS)
names(coeffs) = row.names(summary(mod)$coefficients)
sig_coeffs = data.frame(sig_coeffs, row.names = OUTPUT_VARS)
names(sig_coeffs) = row.names(summary(mod)$coefficients)
sig_coeffs$Y = OUTPUT_VARS
sig_coeffs = melt(sig_coeffs, id.vars=c("Y"))
sig_coeffs$Significance = "No"
for (i in 1:length(INPUT_VARS)){
index= which(sig_coeffs$variable == INPUT_VARS[i])
sig_coeffs$value[index] =  p.adjust(sig_coeffs$value[index], method="BH")
}
sig_coeffs$Significance[which(sig_coeffs$value < 0.05)] = "Yes"
print(dcast(sig_coeffs %>% select(Y, variable, value), variable~Y))
ggplot(sig_coeffs %>%filter(variable== "ICUtypeNon CT-ICU")) +
geom_point(aes(x=Y, y=value, colour = Significance), size=3) +
theme_bw()+
theme(axis.text.x = element_text(angle = 90,hjust=0.95,vjust=0.2))
ggsave(paste0(FOLDER_PLOTS, "significance_cardiac.pdf"))
for (u in (sig_coeffs %>%filter(variable== "ICUtypeNon CT-ICU", Significance == "Yes"))$Y){
df = input_cardiac %>%filter(ICUtype == "CT-ICU")
df2 = input_cardiac %>%filter(ICUtype == "CT-ICU")
df2$ICUtype = "Non CT-ICU"
#df3 = input_cardiac %>%filter(ICUtype == "Non CT-ICU")
#df4 = input_cardiac %>%filter(ICUtype == "Non CT-ICU")
#df4$ICUtype == "CT-ICU"
df = rbind(df,df2)
df = df[which(df$Sex != "Unknown"),]
input_cardiac$Y = input_cardiac[, u]
mod <- lm(Y~ ., data= input_cardiac[, c("Y", INPUT_VARS)])
predicted_values = predict(mod, newdata = df[, c("Y", INPUT_VARS)])
df$`Predicted` = predicted_values
ggplot(df,aes(x= ICUtype, y=Predicted, fill=ICUtype)) +
geom_violin(colour="black", alpha=0.5)+
geom_boxplot(width=0.1, outlier.shape = NA)+
theme_bw()
ggsave(paste0(FOLDER_PLOTS, u, "_CT_ICU_cardiac_violin.pdf"))
df = input_cardiac %>%filter(ICUtype == "Non CT-ICU")
df2 = input_cardiac %>%filter(ICUtype == "Non CT-ICU")
df2$ICUtype = "CT-ICU"
#df3 = input_cardiac %>%filter(ICUtype == "Non CT-ICU")
#df4 = input_cardiac %>%filter(ICUtype == "Non CT-ICU")
#df4$ICUtype == "CT-ICU"
df = rbind(df,df2)
df = df[which(df$Sex != "Unknown"),]
input_cardiac$Y = input_cardiac[, u]
mod <- lm(Y~ ., data= input_cardiac[, c("Y", INPUT_VARS)])
predicted_values = predict(mod, newdata = df[, c("Y", INPUT_VARS)])
df$`Predicted` = predicted_values
ggplot(df,aes(x= ICUtype, y=Predicted, fill=ICUtype)) +
geom_violin(colour="black", alpha=0.5)+
geom_boxplot(width=0.1, outlier.shape = NA)+
theme_bw()
ggsave(paste0(FOLDER_PLOTS, u, "_nonCT_ICU_cardiac_violin.pdf"))
}
OUTPUT_VARS = c("PO224", "PCO224", "Fio224","PEEP24", "SBP24",
"MeanAP24",  "TimeOnToEntralFeeding", "PumpFlow4",
"PumpFlow24", "Rate24")
INPUT_VARS = c("AgeYears", "Sex", "PO2", "PEEP", "HCO3", "resp_score", "Charlson", "PreECLSArrest",
"Transplant", "IntubationToTimeOnHours", "ICUtype")
input_resp = input %>%
filter(SupportType == "Pulmonary")
summary_table2_resp= input_resp %>%
select(AgeYears, Sex_num, ICUtype,YearECLS, resp_score, save_score, PO224, PumpFlow24, DBP24,TimeOnToEntralFeeding)%>%
group_by(ICUtype, YearECLS) %>%
summarise_if(is.numeric,funs(MEAN=mean,
Q1=quantile(x = ., probs = 0.25),
MEDIAN=quantile(x = ., probs = 0.5),
Q3=quantile(x = ., probs = 0.75),
), na.rm=TRUE)
write_csv(summary_table2_resp, paste0(FOLDER_OUTPUT, "table2_resp.csv"))
coeffs = matrix(0, length(OUTPUT_VARS), length(INPUT_VARS) + 1)
sig_coeffs = matrix(0, length(OUTPUT_VARS), length(INPUT_VARS) + 1)
input_resp$PreECLSArrest = factor(input_resp$PreECLSArrest)
input_resp$Transplant = factor(input_resp$Transplant)
for (i in 1:length(OUTPUT_VARS)){
input_resp$Y = input_resp[, OUTPUT_VARS[i]]
mod <- lm(Y~ ., data= input_resp[which(input_resp$Sex != "Unknown"), c("Y", INPUT_VARS)])
print(summary(mod))
coeffs[i,] =  summary(mod)$coefficients[,1]
sig_coeffs[i,] =  summary(mod)$coefficients[,4]
}
coeffs = data.frame(coeffs, row.names = OUTPUT_VARS)
names(coeffs) = row.names(summary(mod)$coefficients)
sig_coeffs = data.frame(sig_coeffs, row.names = OUTPUT_VARS)
names(sig_coeffs) = row.names(summary(mod)$coefficients)
sig_coeffs$Y = OUTPUT_VARS
sig_coeffs = melt(sig_coeffs, id.vars=c("Y"))
sig_coeffs$Significance = "No"
for (i in 1:length(INPUT_VARS)){
index= which(sig_coeffs$variable == INPUT_VARS[i])
sig_coeffs$value[index] =  p.adjust(sig_coeffs$value[index], method="BH")
}
sig_coeffs$Significance[which(sig_coeffs$value < 0.05)] = "Yes"
print(dcast(sig_coeffs %>% select(Y, variable, value), variable~Y))
OUTPUT_VARS = c("PO224", "PCO224", "Fio224","PEEP24", "SBP24",
"MeanAP24",  "TimeOnToEntralFeeding", "PumpFlow4",
"PumpFlow24", "Rate24")
INPUT_VARS = c("AgeYears", "Sex", "PO2", "PEEP", "HCO3", "resp_score", "Charlson", "PreECLSArrest",
"Transplant", "IntubationToTimeOnHours", "ICUtype")
input_resp = input %>%
filter(SupportType == "Pulmonary")
summary_table2_resp= input_resp %>%
select(AgeYears, Sex_num, ICUtype,YearECLS, resp_score, save_score, PO224, PumpFlow24, DBP24,TimeOnToEntralFeeding)%>%
group_by(ICUtype, YearECLS) %>%
summarise_if(is.numeric,funs(MEAN=mean,
Q1=quantile(x = ., probs = 0.25),
MEDIAN=quantile(x = ., probs = 0.5),
Q3=quantile(x = ., probs = 0.75),
), na.rm=TRUE)
write_csv(summary_table2_resp, paste0(FOLDER_OUTPUT, "table2_resp.csv"))
coeffs = matrix(0, length(OUTPUT_VARS), length(INPUT_VARS) + 1)
sig_coeffs = matrix(0, length(OUTPUT_VARS), length(INPUT_VARS) + 1)
input_resp$PreECLSArrest = factor(input_resp$PreECLSArrest)
input_resp$Transplant = factor(input_resp$Transplant)
for (i in 1:length(OUTPUT_VARS)){
input_resp$Y = input_resp[, OUTPUT_VARS[i]]
mod <- lm(Y~ ., data= input_resp[which(input_resp$Sex != "Unknown"), c("Y", INPUT_VARS)])
print(summary(mod))
coeffs[i,] =  summary(mod)$coefficients[,1]
sig_coeffs[i,] =  summary(mod)$coefficients[,4]
}
coeffs = data.frame(coeffs, row.names = OUTPUT_VARS)
names(coeffs) = row.names(summary(mod)$coefficients)
sig_coeffs = data.frame(sig_coeffs, row.names = OUTPUT_VARS)
names(sig_coeffs) = row.names(summary(mod)$coefficients)
sig_coeffs$Y = OUTPUT_VARS
sig_coeffs = melt(sig_coeffs, id.vars=c("Y"))
sig_coeffs$Significance = "No"
for (i in 1:length(INPUT_VARS)){
index= which(sig_coeffs$variable == INPUT_VARS[i])
sig_coeffs$value[index] =  p.adjust(sig_coeffs$value[index], method="BH")
}
sig_coeffs$Significance[which(sig_coeffs$value < 0.05)] = "Yes"
print(dcast(sig_coeffs %>% select(Y, variable, value), variable~Y))
ggplot(sig_coeffs %>%filter(variable== "ICUtypeNon CT-ICU")) +
geom_point(aes(x=Y, y=value, colour = Significance), size=3) +
theme_bw()+
theme(axis.text.x = element_text(angle = 90,hjust=0.95,vjust=0.2))
ggsave(paste0(FOLDER_PLOTS, "significance_resp.pdf"))
for (u in (sig_coeffs %>%filter(variable== "ICUtypeNon CT-ICU", Significance == "Yes"))$Y){
df = input_resp %>%filter(ICUtype == "CT-ICU")
df2 = input_resp %>%filter(ICUtype == "CT-ICU")
df2$ICUtype = "Non CT-ICU"
#df3 = input_cardiac %>%filter(ICUtype == "Non CT-ICU")
#df4 = input_cardiac %>%filter(ICUtype == "Non CT-ICU")
#df4$ICUtype == "CT-ICU"
df = rbind(df,df2)
df = df[which(df$Sex != "Unknown"),]
input_resp$Y = input_resp[, u]
mod <- lm(Y~ ., data= input_resp[, c("Y", INPUT_VARS)])
predicted_values = predict(mod, newdata = df[, c("Y", INPUT_VARS)])
df$`Predicted` = predicted_values
ggplot(df,aes(x= ICUtype, y=Predicted, fill=ICUtype)) +
geom_violin(colour="black", alpha=0.5)+
geom_boxplot(width=0.1, outlier.shape = NA)+
theme_bw()
ggsave(paste0(FOLDER_PLOTS, u, "_CT_ICU_resp_violin.pdf"))
df = input_resp %>%filter(ICUtype == "Non CT-ICU")
df2 = input_resp %>%filter(ICUtype == "Non CT-ICU")
df2$ICUtype = "CT-ICU"
#df3 = input_cardiac %>%filter(ICUtype == "Non CT-ICU")
#df4 = input_cardiac %>%filter(ICUtype == "Non CT-ICU")
#df4$ICUtype == "CT-ICU"
df = rbind(df,df2)
df = df[which(df$Sex != "Unknown"),]
input_resp$Y = input_resp[, u]
mod <- lm(Y~ ., data= input_resp[, c("Y", INPUT_VARS)])
predicted_values = predict(mod, newdata = df[, c("Y", INPUT_VARS)])
df$`Predicted` = predicted_values
ggplot(df,aes(x= ICUtype, y=Predicted, fill=ICUtype)) +
geom_violin(colour="black", alpha=0.5)+
geom_boxplot(width=0.1, outlier.shape = NA)+
theme_bw()
ggsave(paste0(FOLDER_PLOTS, u, "_nonCT_ICU_resp_violin.pdf"))
}
input_ecpr = input %>%
filter(SupportType == "ECPR")
input_ecpr$mechanical_ventilation = "Other"
input_ecpr$mechanical_ventilation[(input_ecpr$VentType == "Conventional") ] = "Conventional"
input_ecpr$mechanical_ventilation[(input_ecpr$VentType == "Unknown") ] = "Other"
input_ecpr$mechanical_ventilation  = factor(input_ecpr$mechanical_ventilation )
OUTPUT_VARS = c("PO224", "PCO224", "Fio224","PEEP24", "SBP24",
"MeanAP24", "PumpFlow4",
"PumpFlow24", "Rate24")
INPUT_VARS = c("AgeYears", "Sex", "PO2", "PEEP", "HCO3", "resp_score", "PreECLSArrest", "Charlson",
"Transplant", "IntubationToTimeOnHours", "ICUtype", "mechanical_ventilation")
summary_table2_ecpr= input_ecpr %>%
select(AgeYears, Sex_num, ICUtype,YearECLS, resp_score, save_score, PO224, PumpFlow24, DBP24,TimeOnToEntralFeeding)%>%
group_by(ICUtype, YearECLS) %>%
summarise_if(is.numeric,funs(MEAN=mean,
Q1=quantile(x = ., probs = 0.25),
MEDIAN=quantile(x = ., probs = 0.5),
Q3=quantile(x = ., probs = 0.75),
), na.rm=TRUE)
write_csv(summary_table2_ecpr, paste0(FOLDER_OUTPUT, "table2_ecpr.csv"))
coeffs = matrix(0, length(OUTPUT_VARS), length(INPUT_VARS) + 1)
sig_coeffs = matrix(0, length(OUTPUT_VARS), length(INPUT_VARS) + 1)
input_ecpr$PreECLSArrest = factor(input_ecpr$PreECLSArrest)
input_ecpr$Transplant = factor(input_ecpr$Transplant)
for (i in 1:length(OUTPUT_VARS)){
input_ecpr$Y = input_ecpr[, OUTPUT_VARS[i]]
test_data = input_ecpr[which(is.na(input_ecpr$Y) == FALSE), c("Y", INPUT_VARS)]
test_data$mechanical_ventilation  = factor(test_data$mechanical_ventilation )
mod <- lm(Y~ ., data= test_data)
print(summary(mod))
coeffs[i,] =  summary(mod)$coefficients[,1]
sig_coeffs[i,] =  summary(mod)$coefficients[,4]
}
coeffs = data.frame(coeffs, row.names = OUTPUT_VARS)
names(coeffs) = row.names(summary(mod)$coefficients)
sig_coeffs = data.frame(sig_coeffs, row.names = OUTPUT_VARS)
names(sig_coeffs) = row.names(summary(mod)$coefficients)
sig_coeffs$Y = OUTPUT_VARS
sig_coeffs = melt(sig_coeffs, id.vars=c("Y"))
sig_coeffs$Significance = "No"
for (i in 1:length(INPUT_VARS)){
index= which(sig_coeffs$variable == INPUT_VARS[i])
sig_coeffs$value[index] =  p.adjust(sig_coeffs$value[index], method="BH")
}
sig_coeffs$Significance[which(sig_coeffs$value < 0.05)] = "Yes"
print(dcast(sig_coeffs %>% select(Y, variable, value), variable~Y))
ggplot(sig_coeffs %>%filter(variable== "ICUtypeNon CT-ICU")) +
geom_point(aes(x=Y, y=value, colour = Significance), size=3) +
theme_bw()+
theme(axis.text.x = element_text(angle = 90,hjust=0.95,vjust=0.2))
ggsave(paste0(FOLDER_PLOTS, "significance_ecpr.pdf"))
for (u in (sig_coeffs %>%filter(variable== "ICUtypeNon CT-ICU", Significance == "Yes"))$Y){
df = input_ecpr %>%filter(ICUtype == "CT-ICU")
df2 = input_ecpr %>%filter(ICUtype == "CT-ICU")
df2$ICUtype = "Non CT-ICU"
#df3 = input_cardiac %>%filter(ICUtype == "Non CT-ICU")
#df4 = input_cardiac %>%filter(ICUtype == "Non CT-ICU")
#df4$ICUtype == "CT-ICU"
df = rbind(df,df2)
df = df[which(df$Sex != "Unknown"),]
input_ecpr$Y = input_ecpr[, u]
mod <- lm(Y~ ., data= input_ecpr[, c("Y", INPUT_VARS)])
predicted_values = predict(mod, newdata = df[, c("Y", INPUT_VARS)])
df$`Predicted` = predicted_values
ggplot(df,aes(x= ICUtype, y=Predicted, fill=ICUtype)) +
geom_violin(colour="black", alpha=0.5)+
geom_boxplot(width=0.1, outlier.shape = NA)+
theme_bw()
ggsave(paste0(FOLDER_PLOTS, u, "_CT_ICU_ecpr_violin.pdf"))
df = input_ecpr %>%filter(ICUtype == "Non CT-ICU")
df2 = input_ecpr %>%filter(ICUtype == "Non CT-ICU")
df2$ICUtype = "CT-ICU"
#df3 = input_cardiac %>%filter(ICUtype == "Non CT-ICU")
#df4 = input_cardiac %>%filter(ICUtype == "Non CT-ICU")
#df4$ICUtype == "CT-ICU"
df = rbind(df,df2)
df = df[which(df$Sex != "Unknown"),]
input_ecpr$Y = input_ecpr[, u]
mod <- lm(Y~ ., data= input_ecpr[, c("Y", INPUT_VARS)])
predicted_values = predict(mod, newdata = df[, c("Y", INPUT_VARS)])
df$`Predicted` = predicted_values
ggplot(df,aes(x= ICUtype, y=Predicted, fill=ICUtype)) +
geom_violin(colour="black", alpha=0.5)+
geom_boxplot(width=0.1, outlier.shape = NA)+
theme_bw()
ggsave(paste0(FOLDER_PLOTS, u, "_nonCT_ICU_ecpr_violin.pdf"))
}
unlink('~/Dropbox/Medical projects/ECMO-final3_cache', recursive = TRUE)
View(cars)
ggplot( data = cars,aes(y=dist, x= speed))+
geom_point(size=2, colour ="grey")+
xlab ("Speed (in Miles Per Hour)")
ylab ("Stopping Distance (in Feet)")+
title("Stopping Distance vs Speed")
ggplot( data = cars,aes(y=dist, x= speed))+
geom_point(size=2, colour ="grey")+
xlab ("Speed (in Miles Per Hour)") +
ylab ("Stopping Distance (in Feet)")+
title("Stopping Distance vs Speed")
ggplot( data = cars,aes(y=dist, x= speed))+
geom_point(size=2, colour ="grey")+
xlab("Speed (in Miles Per Hour)") +
ylab("Stopping Distance (in Feet)")
library(tidyverse)
ggplot( data = cars,aes(y=dist, x= speed))+
geom_point(size=2, colour ="grey")+
xlab("Speed (in Miles Per Hour)") +
ylab("Stopping Distance (in Feet)")+
ggtitle("Stopping Distance vs Speed")+
theme_bw()
ggplot( data = cars,aes(y=dist, x= speed))+
geom_point(size=2, colour ="grey")+
xlab("Speed (in Miles Per Hour)") +
ylab("Stopping Distance (in Feet)")+
ggtitle("Stopping Distance vs Speed")+
theme_bw()
library(readr)
library(data.table)
leuk <- fread("https://newonlinecourses.science.psu.edu/stat501/sites/onlinecourses.science.psu.edu.stat501/files/data/leukemia_remission/index.txt")
leuk <- read_csv("https://newonlinecourses.science.psu.edu/stat501/sites/onlinecourses.science.psu.edu.stat501/files/data/leukemia_remission/index.txt")
leuk <- read_csv("~/Downloads/leukemia_remission")
leuk <- read_csv("~/Downloads/leukemia_remission.txt")
leuk <- read.csv2("~/Downloads/leukemia_remission.txt", fill.na=TRUE)
leuk <- read.csv2("~/Downloads/leukemia_remission.txt", sep= " ")
leuk <- read.csv2("~/Downloads/leukemia_remission.txt", sep= "")
leuk <- read.csv2("~/Downloads/leukemia_remission.txt", sep= ",")
leuk <- read.csv2("~/Downloads/leukemia_remission.txt", sep= ",")
leuk <- read.csv2("~/Downloads/leukemia_remission.txt", sep= " \t")
leuk <- read.table("~/Downloads/leukemia_remission.txt", sep= " \t")
leuk <- read.table("~/Downloads/leukemia_remission.txt")
leuk <- read.table("/Users/cdonnat/Downloads/leukemia_remission.txt")
help("read.csv2")
leuk <- read.csv2("~/Downloads/leukemia_remission.csv", fill.na=TRUE)
leuk <- read.csv2("~/Downloads/leukemia_remission.csv")
knitr::opts_chunk$set(echo = TRUE)
library(readr)
library(data.table)
leuk <- read.csv2("~/Downloads/leukemia_remission.csv", sep=",")
str(leuk)
library(readr)
library(data.table)
leuk <- read.table("~/Downloads/leukemia_remission.csv", sep=",")
str(leuk)
View(leuk)
leuk <- read.table("~/Downloads/leukemia_remission.csv", sep=",", header=1)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
summary(glm(REMISS ~ I(LI*10), data = leuk, family = "binomial"), exponentiate = TRUE, conf.int = TRUE)
install.packages("oddsratio")
install.packages("caTools")
install.packages("WVPlots")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(broom)
library(WVPlots)
fire <- read_csv(file = "~/Downloads/CivilInjury_0.csv")
fire <- fire %>%
mutate(mo = as.POSIXlt(`Injury Date`)$mon + 1) %>%
rename(dt = `Injury Date`,
injuries = `Total Injuries`)
str(fire)
install.packages("MLmetrics")
library(MLmetrics)
help(RMSE)
library(MLmetrics)
